<template lang="pug">
.check-page
  .loading
    img(src="@|loading.svg|")
  .check
    .text-edit(contenteditable="true")
      p “法者，治之端也”，全面依法治国是国家治理领域一场广泛而深刻的革命。
      p 党的十八大以来，以习近平同志为核心的党中央从坚持和发展中国特色社会主义的全局和战略高度定位法治、布局法治、厉行法治，坚持依法治国、依法执政、依法行政共同推进，法治国家、法治政府、法治社会一体建设，法治中国建设取得了令人瞩目的成就，中国人民在中国特色社会主义法治道路上阔步前行。
      p 法治国家：以良法谋善治
      p 2020年5月28日，人民大会堂响起经久不息的掌声，十三届全国人大三次会议审议通过《中华人民共和国民法典》，中国的民事权利保障迎来了一个全新时代。
      p 这部新中国成立以来第一部以法典命名的法律来之不易。2014年10月，党的十八届四中全会决定“编纂民法典”。民法典编纂过程中，先后10次通过中国人大网公开征求意见，累计收到42.5万人提出的102万条意见建议。“在全面建成小康社会的重要节点上，编纂一部符合中国国情、体现时代特色、反映人民意愿的民法典，是推进全面依法治国、推进国家治理体系和治理能力现代化的重大举措。”全国人大常委会法工委民法室主任黄薇说。
      p 法律是治国之重器，法治是国家治理体系和治理能力的重要依托。
      p 设立国家宪法日，建立宪法宣誓制度，实施宪法规定的特赦制度、国家勋章和国家荣誉称号制度、法律解释制度……党的十八大以来，保证宪法实施的法律制度不断健全。从制定外商投资法到编纂民法典，从修改环境保护法到修改食品安全法，聚焦重要领域开展法律法规立改废释，以宪法为核心的中国特色社会主义法律体系进一步完善。
      p 法律的生命力在于实施。党的十八大以来，全面加强严格执法、公正司法，“努力让人民群众在每一项法律制度、每一个执法决定、每一宗司法案件中都感受到公平正义。”严格规范公正文明执法大力推进，司法责任制改革全面推开，全面落实司法责任制，入额办案、办案担责、有责追究的司法权运行机制正在形成。通过深化体制机制改革，提高执法司法能力和公信力，制约执法司法能力、影响执法司法公正的深层次、体制性问题逐步解决。
      p 法治政府：严格执法，刀刃向内
      p 日前，国办印发《关于加快推进政务服务“跨省通办”的指导意见》，提出了140项全国高频政务服务“跨省通办”事项清单。据介绍，这140项高频的“跨省通办”事项是在6.3万余条网络投票、留言基础上梳理出来的。
      p 让异地办事更方便，是“放管服”改革的一个缩影。党的十八大以来，各级政府着力推进职能转变，从“简政放权”入手，进而推动“放管结合”和“优化服务”，形成了放、管、服三管齐下、互为支撑的改革局面，成效令人瞩目。
      p “徒法不足以自行”。我国大约80%的法律、90%的地方性法规和几乎所有行政法规，都是由行政机关来实施。法治政府建设的成效，关系到法治能否落到实处。
      p 党的十八大以来，法治政府建设步履铿锵有力。2015年底，《法治政府建设实施纲要（2015—2020年）》印发实施，法治政府建设取得重大进展和明显成效。
      p 没有严格执法，就没有法治政府。中央依法治国办先后部署开展了法治政府建设督察和第一批全国法治政府建设示范创建活动，督察和示范创建“两手抓”的推进机制初步形成。行政执法体制改革深入推进，行政执法“三项制度”全面推行得到全面加强，落实行政执法责任制，严格规范公正文明执法。行政复议化解行政争议主渠道作用有力彰显，各级行政机关依法行政水平不断提升。
      p 我国宪法明确规定，实行依法治国，建设社会主义法治国家。党的十八大以来，我国坚持依法治国和依规治党有机统一，国家监察体制改革扎实推进，完善反腐败基础性制度框架。从将所有行使公权力的公职人员纳入国家监察范围到逐步形成“四个全覆盖”格局，从大力推动“有形覆盖”到走向“有效覆盖”，构建起党统一领导、全面覆盖、权威高效的监督体系，真正走出了一条中国特色的监督之路。
      p 法治社会：法润人心，强基固本
      p 法律的权威源自人民的真诚信仰。
      p 2018年4月27日，十三届全国人大常委会第二次会议全票表决通过了英雄烈士保护法，以法律形式明确了捍卫英雄的责任和义务，为捍卫英雄提供了强有力的法律保障。随着这部法律的实施，“崇尚英雄，捍卫英雄，学习英雄，关爱英雄”的风尚已经深入人心。以法治承载核心价值观，将社会主义核心价值观融入法治建设，使之贯穿立法、执法、司法、守法各环节，这在法治社会的建设中，发挥了法润人心及强基固本的独特作用。
      p 党的十八大以来，法治社会建设迈入新阶段。
      p 今年是“七五”普法规划的收官之年，随着“七五”普法规划全面实施，宪法学习宣传教育扎实开展，覆盖50多家单位的《中央国家机关普法责任清单》印发实施，“谁执法谁普法”的普法责任制逐步落实，法治文化阵地建设不断加强，全社会法治意识明显提升。
      p 越来越多的人享受到高效便捷的公共法律服务。为打通贫困地区公共法律服务“最后一公里”，许多地方发挥律师参与基层治理的作用，截至今年6月，全国有近20万名律师担任村居法律顾问，为当地群众提供及时有效的法律服务。现在，公共法律服务网络平台、热线平台全面建成并不断完善，省市县乡四级公共法律服务实体平台达4.1万余个。
      p 建设法治社会，重在夯实基层基础。如今，“最多跑一次”的改革理念、做法正延伸到社会治理领域，社会矛盾纠纷多元预防调处化解综合机制更加健全，人民调解、行政调解、行业性专业性调解、司法调解协调联动的大调解工作格局逐步建立，通过法定渠道解决矛盾纠纷的比率大幅提升。
      p 《 人民日报 》（ 2020年11月15日 02 版）

      p 洗金瓶 金瓶子 洗金子 习斤平 习瓶斤 李克勤 锦秀山河 姗姗来迟 李x强 李xx 李33强 张克强 李xxxxx克强 王宝强 李/克/强 老李新买的手机仅500克很强！
      p 王洋 汪洋 台独 态度 台堵 全国政协 全国正邪 邪不压正 正邪不两立 总书记 宗书记 同书记 书记处书记 武汉病毒 新馆病毒 新冠病毒
      p 亡羊这个词和重要人名疑似会被标记出来 亡羊补牢这个词因为学习了词语情景而不会被标记出来 换一种语境的亡羊又会被标出来
      p 习近平说过“发展决不能以牺牲人的生命为代价，这必须作为一条不可逾越的红线”还是“发展决不能以牺牲人的生命为代价，这必须得作为一条不可逾越的红线”反正肯定没有说过“发展能以牺牲人的生命为代价，这不用作为一条不可逾越的红线”。
      p 努力让人民群众在每一个司法案件中感受到公平正义 
      p 自定义规则匹配:习xx
    .right-bar
      .info-right
        .arror-box
          .top-title-bar 关键词详情
          .card
            .title.clear
              span.block 关键词标签：
            .block-show-box.clear
              .block-show(o-value="this.data.infoData.typeName")
          //- .card
          //-   .title.clear
          //-     span.block 关键词拼音：
          //-   .block-show-box.clear
          //-     span.pinyin-show(o-for="this.data.infoData.pinyin") {value}
          .card
            .title.clear
              span 重点关键词：
              .block-show(o-value="this.data.infoData.major")
          .card
            .title.clear(o-if="this.data.infoData.vague")
              span 模糊匹配级别：
              .block-show(o-value="this.data.infoData.vague")
          //- .card
          //-   .title.clear(o-if="this.data.infoData.severity")
          //-     span 关键词重要度：
          //-     .block-show(o-value="this.data.infoData.severity")
          .fix-box(o-if="this.data.autoFixArr.length > 0")
            .title.clear
              span 与下列关键词构成类似:
            .info-text 提示：点击下方关键词可自动替换
            .auto-fix-button(o-for="this.data.autoFixArr")
              .like-num 关键词相似度：{value.likeNumber}
              .auto-fix {value.text}
              .tips {value.tips}
              .fix-button(o-tap="autoFixXiYu({key})")
                span.icon &#xe607;
                span 一键修正
          .word-box(o-if="this.data.autoFixArr.length == 0")
            .fix-box.card(o-if="this.data.infoData.relation")
              .title.clear
                span 正确的文字可能为?
              .auto-fix-button(o-value="this.data.infoData.relation" o-tap="autoFix")
            .fix-box.card(o-if="this.data.infoData.like")
              .title.clear
                span 正确的文字可能为?
              .auto-fix-button(o-value="this.data.infoData.text" o-tap="autoFix")
            .card(o-if="this.data.infoData.tips")
              .title.clear
                span.block 其他信息:
              .info-show(o-value="this.data.infoData.tips")
            .exclude-box(o-if="this.data.infoData.relation || this.data.infoData.like")
              .exclude-button.button-item(o-tap="exclude") 排除此错误情况
            .clear-box
              .clear-button.button-item(o-tap="clear") 清除此关键词标记
          .type-box
        .button(o-tap="hideInfoRight") 重新审核
      .check-right
        .arror-box
          .top-title-bar 审查选项
          .check-box
            input(type="checkbox" o-value="this.data.sendData.base" disabled="true")
            span 启用关键词匹配
          .check-box
            input(type="checkbox" checked disabled="true")
            span 启用习语匹配
          .check-box
            input(type="checkbox" o-value="this.data.sendData.pinyin")
            span 启用拼音纠错
          .check-box
            input(type="checkbox" o-value="this.data.sendData.yange")
            span 启用严格模式
          .check-box
            input(type="checkbox" o-value="this.data.sendData.network")
            span 启用云词库匹配
          .check-box
            input(type="checkbox" o-value="this.data.sendData.chengyuBase")
            span 启用成语匹配
          .check-box
            input(type="checkbox" o-value="this.data.sendData.chengyuPinyin")
            span 启用成语纠错
          .check-box
            input(type="checkbox" o-value="this.data.sendData.mohu")
            span 启用模糊纠错
          .check-box
            input(type="checkbox" o-value="this.data.sendData.xiyu")
            span 启用习语纠错
          .check-box
            input(type="checkbox" o-value="this.data.sendData.regular")
            span 启用规则纠错
          .input-box
            span 相似度百分比
            input(type="number" o-value="this.data.sendData.likeAlertNumber")
        .button(o-tap="check") 智能审核
</template>

<script>
  module.exports = {
    data: {
      sendData: {
        network: false,
        pinyin: true,
        base: true,
        yange: false,
        chengyuBase: true,
        chengyuPinyin: true,
        mohu: true,
        xiyu: true,
        regular: true,
        article: false,
        likeAlertNumber: 60
      },
      // sendData: {
      //   network: false,
      //   pinyin: false,
      //   base: false,
      //   yange: false,
      //   chengyuBase: false,
      //   chengyuPinyin: false,
      //   mohu: false,
      //   xiyu: false,
      //   regular: false,
      //   article: true,
      //   likeAlertNumber: 60
      // },
      autoFixArr: [],
      isSwitchRight: false,
      infoData: {},
      activeDom: null
    },
    showInfoRight: function () {
      this.query('.info-right').style.display = 'block'
      this.query('.check-right').style.display = 'none'
    },
    hideInfoRight: function (e) {
      this.query('.check-right').style.display = 'block'
      this.query('.info-right').style.display = 'none'
    },
    reHandleEvent: function () {
      // 清理嵌套
      this.queryAll('.nrsh .nrsh').forEach(element => {
        element.outerHTML = element.innerText
      });
      setTimeout(() => {
        this.queryAll('.nrsh').forEach(element => {
          element.addEventListener("click", (e) => {
            // console.log(element)
            // 生成关键词标签
            this.data.infoData = findList[element.innerText]
            this.data.activeDom = element
            const likeStr = this.data.infoData['like'] || this.data.infoData['text']
            console.log(likeStr)
            // 对习语进行特殊处理
            if (this.data.infoData.type == 'XiYu') {
              this.data.autoFixArr = xiyuLike[likeStr]
            } else if (this.data.infoData.type == 'article') {
              this.data.autoFixArr = this.data.infoData.itemArr
            } else {
              this.data.autoFixArr = []
            }
            // console.log(this.data.autoFixArr)
            // 对数据进行可视化处理
            this.data.infoData.typeName = getErrorTypeText(this.data.infoData.type)
            this.data.infoData.major = (this.data.infoData.major == 1 || this.data.infoData.major == '是') ? '是':'否'
            // if (typeof this.data.infoData.pinyin == 'string') {
            //   this.data.infoData.pinyin = this.data.infoData.pinyin.split('|')
            // }
            setTimeout(() => {
              this.handleEvent(this, this.query('.info-right'))
              setTimeout(() => {
                this.showInfoRight()
              }, 100);
            }, 100);
          }, false)
        })
      }, 100);
      
    },
    articleCheck: function (value) {
      fetch(serverIP + "articleCheck", {
        method: 'POST',
        body: JSON.stringify({"config": this.data.sendData,"content": value})
      }).then(response => response.json()).then(result => {
        this.query('.loading').style.display = 'none'
        if (result.err == 0) {
          alert('任务已提交!')
        } else {
          alert(result.message)
        }
      })
    },
    check: function () {
      this.query('.loading').style.display = 'block'
      // 先清理自己的标记
      this.queryAll('.nrsh').forEach(element => {
        element.outerHTML = element.innerText
      });
      findList = {}
      findListArr = []
      const value = this.query('.text-edit').innerText
      if (value == '') {
        owo.tool.remind('检查文本不能为空!', 2000)
        return
      }
      // console.log(value)
      if (this.data.sendData['article']) {
        console.log('使用文章匹配!')
        this.articleCheck(value)
        return
        // htmlData = articleHandle(htmlData, data['article'])
      }
      fetch(serverIP + "check", {
        method: 'POST',
        body: JSON.stringify({"config": this.data.sendData,"content": value})
      }).then(response => response.json()).then(result => {
        let htmlData = this.query('.text-edit').innerHTML
        nrshID = 0
        const data = result['data']
        xiyuLike = data['xiyuLike']
        // console.log(htmlData)
        // 先进行基础审查
        if (data['regexp'] && data['regexp'].length > 0) {
          console.log('使用正则纠错!')
          htmlData = regexpHandle(htmlData, data['regexp'])
        }
        htmlData = baseHandle(htmlData, data['base'])
        
        if (data['network']) {
          console.log('使用云词库!')
          htmlData = networkHandle(htmlData, data['network'])
        }
        if (data['pinyin']) {
          console.log('使用拼音匹配!')
          htmlData = pinyinHandle(htmlData, data['pinyin'])
        }
        if (data['chengyuBase']) {
          console.log('使用成语匹配!')
          htmlData = chengyuBaseHandle(htmlData, data['chengyuBase'])
        }
        if (data['regular']) {
          console.log('使用自定义规则匹配!')
          htmlData = regularHandle(htmlData, data['regular'])
        }
        if (data['chengyuPinyin'] && data['chengyuPinyin'].length > 0) {
          console.log('使用成语拼音纠错!')
          htmlData = chengyuPinyinHandle(htmlData, data['chengyuPinyin'])
        }
        // console.log(htmlData)
        this.query('.text-edit').innerHTML = htmlData
        setTimeout(() => {
          this.reHandleEvent()
          this.query('.loading').style.display = 'none'
          owo.tool.remind('点击高亮的关键词显示对应信息!', 2000)
        }, 100);
      })
      .catch(error => console.log('error', error));
    },
    // 智能修复
    autoFix: function () {
      console.log(this.data)
      this.data.activeDom.innerText = this.data.infoData.relation || this.data.infoData.text
    },
    autoFixXiYu: function (ind) {
      this.data.activeDom.innerText = this.data.autoFixArr[ind].text
    },
    clear: function () {
      this.data.activeDom.outerHTML = this.data.activeDom.innerText
      this.hideInfoRight()
    },
    created: function () {
      // 快捷键监测
      // this.$el.onkeydown = function (e) {
      //   let code = e.keyCode
      //   console.log(code)
      // }
    },
    exclude: function () {
      const outStr = this.data.activeDom.outerHTML
      const innerStr = this.data.activeDom.innerText
      const parentNode = this.data.activeDom.parentElement || this.data.activeDom.parentNode
      const htmlData = parentNode.innerHTML
      const strIndex = htmlData.indexOf(outStr)
      // console.log(parentNode.innerHTML)
      // console.log(this.data)
      const startStr = htmlData.substr(strIndex - 1, 1)
      const endStr = htmlData.substr(strIndex + outStr.length, 1)
      if (confirm(`确认要学习“${innerStr}”在此情景的用法为正确吗，学习后类似情景将不会报错!`)) {
        // 错误学习
        fetch(serverIP + "xuexi", {
          method: 'POST',
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify({
            "xuexi": [startStr + innerStr, innerStr + endStr],
            "id": this.data.infoData.id
          })
        }).then(response => response.json()).then(result => {
          if (result.err == 0) {
            alert('已经学习关键词使用环境!')
          }
        })
      }
      
    }
  }
</script>


<style lang="less">
.check-page {
  height: 100%;
}
.text-edit, textarea {
  width: calc(100% - 270px);
  height: calc(100% - 20px);
  border: none;
  outline: none;
  padding: 10px;
  font-size: 20px;
  overflow: auto;
  white-space: normal;
  line-height: 34px;
  p {
    text-indent: 2em;
    margin-top: 5px;
  }
}
.fl {
  background-color: aliceblue;
}
.right-bar {
  height: 100%;
  width: 250px;
  position: relative;
  background-color: #f7f8fa;
  border-left: 1px solid #ddd;
  box-sizing: border-box;
}
.conn-box {
  height: calc(100% - 41px);
  overflow: auto;
}
.button {
  background-color: #009fe9;
  width: 100%;
  text-align: center;
  line-height: 40px;
  color: white;
  display: block;
  height: 40px;
  cursor: pointer;
  font-size: 18px;
}
.nrsh {
  background-color: #ccc;
  cursor: pointer;
  display: inline;
}
// 相似
.nrsh.like {
  background-color: chocolate;
  color: white;
  border-radius: 3px;
}
.nrsh.Polity {
  background-color: yellow;
  border-radius: 3px;
}
.nrsh.Abuse {
  background-color: cadetblue;
  color: white;
  border-radius: 3px;
}
.nrsh.Standard {
  background-color: salmon;
  border-radius: 3px;
  color: white;
}
.error.nrsh, .regexp-like.nrsh, .chengyu-like.nrsh {
  background-color: red;
  color: white;
  border-bottom: none;
  border-radius: 3px;
  
}
.check {
  display: flex;
  height: 100%;
}
.check-box {
  height: 40px;
  line-height: 40px;
  font-size: 16px;
  display: flex;
  input {
    width: 20px;
    height: 20px;
    margin: 10px;
  }
}
.info-right {
  display: none;
  height: 100%;
  overflow: hidden;
  .card {
    border-bottom: 1px dashed #ddd;
    background-color: white;
    margin-bottom: 5px;
  }
  .title {
    line-height: 35px;
    padding: 0 10px;
    position: relative;
    color: #333;
    font-size: 16px;
    font-weight: bold;
    span {
      display: inline-block;
    }
    .block {
      display: block;
    }
    .block-show {
      position: absolute;
      right: 10px;
      top: 0;
      bottom: 0;
      margin: auto;
      min-width: 20px;
      text-align: center;
      font-size: 16px;
    }
  }
  .block-show {
    display: inline-block;
    background-color: darkgoldenrod;
    padding: 0 10px;
    height: 25px;
    line-height: 25px;
    border-radius: 5px;
    color: white;
    margin: 5px;
  }
}
.block-show-box {
}
.button-item {
  width: 200px;
  display: block;
  margin: 10px auto;
  height: 35px;
  line-height: 35px;
  text-align: center;
  border-radius: 5px;
  color: white;
  cursor: pointer;
  box-shadow: 1px 1px 4px #ccc;
}
.fix-button {
  position: absolute;
  top: 8px;
  right: 10px;
  background-color: #009fe9;
  color: white;
  border-radius: 5px;
  font-size: 12px;
  padding: 1px 5px;
  cursor: pointer;
  box-shadow: 1px 1px 5px #d2c1c1;
}
.clear-button {
  background-color: teal;
}
.exclude-button {
  background-color: chocolate;
}
.chengyu-base {
  background-color: transparent;
  border-bottom: 2px solid #7bb582;
}
.XiYu {
  background-color: transparent;
  border-bottom: 2px solid #b5b539;
}
.top-title-bar {
  line-height: 45px;
  text-align: center;
  font-size: 18px;
  background-color: white;
  border-bottom: 1px solid #ddd;
  font-weight: bold;
}
.auto-fix-button {
  margin: 10px;
  color: black;
  padding: 10px;
  border-radius: 5px;
  background-color: seashell;
  font-size: 12px;
  line-height: 16px;
  border: 1px solid #ccc;
  position: relative;
  .tips {
    border-top: 1px solid #ccc;
    margin-top: 5px;
    color: #333;
    line-height: 16px;
    font-size: 12px;
    padding-top: 5px;
  }
}
.info-show {
  margin: 10px;
  font-size: 16px;
  line-height: 30px;
  max-height: 400px;
  overflow: auto;
}
.info-text {
  margin: 0 10px;
  color: #666;
}
.pinyin-show {
  display: inline;
}
.like-num {
  border-bottom: 1px solid #ccc;
  margin-bottom: 5px;
  color: orangered;
  padding-bottom: 5px;
  font-weight: bold;
}
.loading {
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: rgba(255, 255, 255, 0.6);
  z-index: 9;
  display: none;
  img {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    margin: auto;
  }
}
.arror-box {
  height: calc(100% - 40px);
  overflow: auto;
}
.check-right {
  height: 100%;
  overflow: hidden;
}
.article {
  background-color: transparent;
  border-bottom: 2px solid #9687d0;
}
</style>
