<template lang="pug">
.check-page
  .check
    .text-edit(contenteditable="true")
      p 报北京11月11日电  （记者冯春梅）全国政协十三届常委会第十四次会议11日在京闭幕。中共中央政治局常委、全国政协主席汪洋主持会议并讲话。
      p 全国政协常委们高度评价“十三五”时期我国经济社会发展取得的巨大成就，完全赞成和拥护习近平总书记在中共十九届五中全会上的重要讲话和全会审议通过的规划建议，一致认为规划建议擘画蓝图鼓舞人心、制定目标实事求是、部署举措务实精准，是今后5年乃至更长时期我国经济社会发展的行动指南。大家表示，要自觉学习贯彻全会精神、对标对表全会要求，切实担负起政协委员的政治责任。
      p 汪洋指出，深入学习宣传贯彻五中全会精神，是当前和今后一个时期人民政协的首要政治任务。要深入研究和深刻把握全面建设社会主义现代化国家的精髓要义，紧紧围绕中国式现代化人口规模巨大、全体人民共同富裕、物质文明和精神文明相协调、人与自然和谐共生、走和平发展道路等重要特征，发挥人民政协人才荟萃优势，深化对相关重大理论和实践问题的研究，更好为制定实施“十四五”规划纲要精准建言、凝心聚力。
      p 汪洋强调，要按照五中全会部署要求，坚持制度引领，推动贯彻中央政协工作会议精神走深走实。要以制定政协协商工作规则为牵引，进一步提高专门协商机构协商履职水平；以实施加强和促进人民政协凝聚共识工作的意见为基础，进一步增强凝心聚力的实效；以强化委员责任担当为抓手，加强正向激励和纪律约束，进一步推动作风之实和履职之能有机结合。
      p 会议审议通过了关于举办辛亥革命110周年纪念活动的决定、全国政协关于强化政协委员责任担当的意见，审议通过了修订后的政协全国委员会专门委员会通则等。
      p 会议经过表决，增补王尔乘、李宝善、蔡名照为第十三届全国政协委员，李宝善、蔡名照为教科卫体委员会副主任，王尔乘为社会和法制委员会副主任；增补高波为第十三届全国政协副秘书长，不再担任人口资源环境委员会驻会副主任；接受蓝天立同志因工作原因请辞第十三届全国政协委员。
      p 闭幕会前，国家发展改革委党组成员、国家粮食和物资储备局局长张务锋应邀作了题为“解决好中国人自己的‘饭碗’问题——我国粮食生产与粮食安全”学习讲座。
      p 全国政协副主席张庆黎、刘奇葆、董建华、万钢、卢展工、王正伟、马飚、陈晓光、梁振英、夏宝龙、李斌、巴特尔、汪永清、苏辉、郑建邦、辜胜阻、刘新成、何维、邵鸿、高云龙出席会议。
      p 洗金瓶 金瓶子 洗金子 习斤平 李克勤 锦秀山河 姗姗来迟 李x强 李xx 李33强 张克强 李xxxxx克强 王宝强 李/克/强 老李新买的手机仅500克很强！
      p 王洋 汪洋 台独 态度 台堵 全国政协 全国正邪 邪不压正 正邪不两立 总书记 宗书记 同书记 书记处书记 武汉病毒 新馆病毒 新冠病毒
      p 习近平说过“发展决不能以牺牲人的生命为代价，这必须作为一条不可逾越的红线”还是“发展决不能以牺牲人的生命为代价，这必须得作为一条不可逾越的红线”反正肯定没有说过“发展能以牺牲人的生命为代价，这不用作为一条不可逾越的红线”。
    .right-bar
      .info-right
        .top-title-bar 关键词详情
        .card
          .title.clear
            span.block 关键词标签：
          .block-show-box.clear
            .block-show(o-value="this.data.infoData.type")
        .card
          .title.clear
            span.block 关键词拼音：
          .block-show-box.clear
            .block-show(o-for="this.data.infoData.pinyin") {value}
        .card
          .title.clear
            span 重点关键词：
            .block-show(o-value="this.data.infoData.major")
        .card
          .title.clear(o-if="this.data.infoData.vague")
            span 模糊匹配级别：
            .block-show(o-value="this.data.infoData.vague")
        .card
          .title.clear(o-if="this.data.infoData.severity")
            span 关键词重要度：
            .block-show(o-value="this.data.infoData.severity")
        .card
          .title.clear(o-if="this.data.infoData.tips")
            span.block 其他信息:
            .info-show(o-value="this.data.infoData.tips")
        .fix-box(o-if="this.data.infoData.like")
          .title.clear
            span 智能修改关键词为:
          .auto-fix-button(o-value="this.data.infoData.text" o-tap="autoFix")
        .fix-box.card(o-if="this.data.infoData.relation")
          .title.clear
            span 正确的文字可能为?
          .auto-fix-button(o-value="this.data.infoData.relation" o-tap="autoFix")
        .clear-box
          .clear-button.button-item(o-tap="clear") 清除此关键词标记
        .type-box
        .button(o-tap="hideInfoRight") 返回审核
      .check-right
        .top-title-bar 审查选项
        .check-box
          input(type="checkbox" o-value="this.data.sendData.base" disabled="true")
          span 启用关键词匹配
        .check-box
          input(type="checkbox" checked disabled="true")
          span 启用习语匹配
        .check-box
          input(type="checkbox" o-value="this.data.sendData.pinyin")
          span 启用拼音纠错
        .check-box
          input(type="checkbox" o-value="this.data.sendData.yange")
          span 启用严格模式
        .check-box
          input(type="checkbox" o-value="this.data.sendData.network")
          span 启用云词库匹配
        .check-box
          input(type="checkbox" o-value="this.data.sendData.chengyuBase")
          span 启用成语匹配
        .check-box
          input(type="checkbox" o-value="this.data.sendData.chengyuPinyin")
          span 启用成语纠错
        .check-box
          input(type="checkbox" o-value="this.data.sendData.mohu")
          span 启用模糊纠错
        .check-box
          input(type="checkbox" o-value="this.data.sendData.xiyu")
          span 启用习语纠错
        .button(o-tap="check") 智能审核
</template>

<script>
  module.exports = {
    data: {
      sendData: {
        network: false,
        pinyin: false,
        base: true,
        yange: false,
        chengyuBase: false,
        chengyuPinyin: false,
        mohu: false,
        xiyu: true
      },
      findList: {},
      findListArr: [],
      isSwitchRight: false,
      infoData: {},
      activeDom: null
    },
    getErrorTypeText: function (errorCode) {
      switch (errorCode) {
        case 'Polity':
          return '政治'
          break;
        case 'Illegal':
          return '违法'
          break;
        case 'Porn':
          return '色情'
          break;
        case 'Abuse':
          return '粗俗'
          break;
        default:
          return errorCode
          break;
      }
    },
    showInfoRight: function () {
      this.query('.info-right').style.display = 'block'
      this.query('.check-right').style.display = 'none'
    },
    hideInfoRight: function (e) {
      this.query('.check-right').style.display = 'block'
      this.query('.info-right').style.display = 'none'
    },
    baseHandle: function (htmlData, data) {
      console.log(htmlData)
      data.forEach(item => {
        if (!this.data.findList[item['text']]) {
          this.data.findList[item['text']] = item
          this.data.findListArr.push(item)
          if (item.type === 'Standard') {
            htmlData = htmlData.replace(new RegExp(item['text'], "gm"), `<span data-ind="${this.data.findListArr.length}" title="是否应该写成: ${item.relation}?" class="nrsh base Standard">${item['text']}</span>`)
          } else {
            htmlData = htmlData.replace(new RegExp(item['text'],"gm"), `<span data-ind="${this.data.findListArr.length}" title="关键词类型: ${this.getErrorTypeText(item.type)}" class="nrsh base ${item.type}">${item['text']}</span>`)
          }
        }
      })
      return htmlData
    },
    pinyinHandle: function (htmlData, data) {
      // console.log(data)
      data.forEach(item => {
        if (!this.data.findList[item['like']]) {
          this.data.findList[item['like']] = item
          this.data.findListArr.push(item)
          // 如果词的类型为政治词语，不一致为错误，其他类型不一致为对应类型
          if (item.type === 'Polity') {
            htmlData = htmlData.replace(new RegExp(item['like'], "gm"), `<span data-ind="${this.data.findListArr.length}" title="是否应该写成: ${item.text}?" class="nrsh like error">${item['like']}</span>`)
          } else {
            htmlData = htmlData.replace(new RegExp(item['like'], "gm"), `<span data-ind="${this.data.findListArr.length}" title="关键词类型: ${this.getErrorTypeText(item.type)}" class="nrsh like ${item.type}">${item['like']}</span>`)
          }
        }
      })
      return htmlData
    },
    networkHandle: function (htmlData, data) {
      // console.log(data)
      data.forEach(item => {
        if (!this.data.findList[item['HitInfo']]) {
          this.data.findList[item['HitInfo']] = item
          this.data.findListArr.push(item)
          htmlData = htmlData.replace(new RegExp(item['HitInfo'],"gm"), `<span data-ind="${this.data.findListArr.length}" class="nrsh">${item['HitInfo']}</span>`)
        } else {
          console.log(`${item['HitInfo']} 已被找出，跳过词语!`)
        }
      })
      return htmlData
    },
    reHandleEvent: function () {
      // 清理嵌套
      this.queryAll('.nrsh .nrsh').forEach(element => {
        element.outerHTML = element.innerText
      });
      setTimeout(() => {
        this.queryAll('.nrsh').forEach(element => {
          element.addEventListener("click", (e) => {
            var btnNum = event.button;
            if (btnNum==2) {
              console.log('清理')
            } else {
              // console.log(element)
              // 生成关键词标签
              this.data.infoData = this.data.findList[element.innerText]
              this.data.activeDom = element
              // console.log(this.data.infoData)
              // 对数据进行可视化处理
              this.data.infoData.type = this.getErrorTypeText(this.data.infoData.type)
              this.data.infoData.major = (this.data.infoData.major == 1 || this.data.infoData.major == '是') ? '是':'否'
              if (typeof this.data.infoData.pinyin == 'string') {
                this.data.infoData.pinyin = this.data.infoData.pinyin.split('|')
              }
              setTimeout(() => {
                this.handleEvent(this, this.query('.info-right'))
                setTimeout(() => {
                  this.showInfoRight()
                }, 100);
              }, 100);
            }
          }, false)
        })
      }, 100);
      
    },
    check: function () {
      // 先清理自己的标记
      this.queryAll('.nrsh').forEach(element => {
        element.outerHTML = element.innerText
      });
      this.data.findList = {}
      this.data.findListArr = []
      const value = this.query('.text-edit').innerText
      if (value == '') {
        owo.tool.remind('检查文本不能为空!', 2000)
        return
      }
      // console.log(value)

      fetch("http://127.0.0.1:8006/check", {
        method: 'POST',
        body: JSON.stringify({"config": this.data.sendData,"content": value})
      }).then(response => response.json()).then(result => {
        let htmlData = this.query('.text-edit').innerHTML
        
        const data = result['data']
        // console.log(htmlData)
        // 先进行基础审查
        htmlData = this.baseHandle(htmlData, data['base'])
        if (data['network']) {
          console.log('使用云词库!')
          htmlData = this.networkHandle(htmlData, data['network'])
        }
        if (data['pinyin']) {
          console.log('使用拼音匹配!')
          htmlData = this.pinyinHandle(htmlData, data['pinyin'])
        }
        if (data['chengyuBase']) {
          console.log('使用成语匹配!')
          htmlData = chengyuBaseHandle(htmlData, data['chengyuBase'])
        }
        if (data['chengyuPinyin'] && data['chengyuPinyin'].length > 0) {
          console.log('使用成语拼音纠错!')
          htmlData = chengyuPinyinHandle(htmlData, data['chengyuPinyin'])
        }
        if (data['regexp'] && data['regexp'].length > 0) {
          console.log('使用正则纠错!')
          htmlData = regexpHandle(htmlData, data['regexp'])
        }
        // console.log(htmlData)
        this.query('.text-edit').innerHTML = htmlData
        setTimeout(() => {
          this.reHandleEvent()
          owo.tool.remind('点击高亮的关键词显示对应信息!', 2000)
        }, 100);
      })
      .catch(error => console.log('error', error));
    },
    // 智能修复
    autoFix: function () {
      console.log(this.data)
      this.data.activeDom.innerText = this.data.infoData.relation || this.data.infoData.text
    },
    clear: function () {
      this.data.activeDom.outerHTML = this.data.activeDom.innerText
      this.hideInfoRight()
    },
    created: function () {
      // 快捷键监测
      // this.$el.onkeydown = function (e) {
      //   let code = e.keyCode
      //   console.log(code)
      // }
    }
  }
</script>


<style lang="less">
.check-page {
  height: 100%;
}
.text-edit, textarea {
  width: calc(100% - 270px);
  height: calc(100% - 20px);
  border: none;
  outline: none;
  padding: 10px;
  font-size: 26px;
  overflow: auto;
  white-space: normal;
  line-height: 34px;
  p {
    text-indent: 2em;
    margin-top: 5px;
  }
}
.fl {
  background-color: aliceblue;
}
.right-bar {
  height: 100%;
  width: 250px;
  position: relative;
  background-color: #f7f8fa;
  border-left: 1px solid #ddd;
  box-sizing: border-box;
}
.conn-box {
  height: calc(100% - 41px);
  overflow: auto;
}
.button {
  background-color: #009fe9;
  width: 100%;
  text-align: center;
  line-height: 40px;
  color: white;
  display: block;
  height: 40px;
  cursor: pointer;
  font-size: 18px;
  position: absolute;
  bottom: 0;
}
.nrsh {
  background-color: #ccc;
  cursor: pointer;
}
// 相似
.nrsh.like {
  background-color: chocolate;
  color: white;
  border-radius: 3px;
}
.nrsh.Polity {
  background-color: yellow;
  border-radius: 3px;
}
.nrsh.Abuse {
  background-color: cadetblue;
  color: white;
  border-radius: 3px;
}
.nrsh.Standard {
  background-color: salmon;
  border-radius: 3px;
  color: white;
}
.error.nrsh, .regexp-like.nrsh, .chengyu-like.nrsh {
  background-color: red;
  color: white;
  border-radius: 3px;
}
.check {
  display: flex;
  height: 100%;
}
.check-box {
  height: 40px;
  line-height: 40px;
  font-size: 16px;
  display: flex;
  input {
    width: 20px;
    height: 20px;
    margin: 10px;
  }
}
.info-right {
  display: none;
  .card {
    border-bottom: 1px dashed #ddd;
    background-color: white;
    margin-bottom: 5px;
  }
  .title {
    line-height: 35px;
    padding: 0 10px;
    position: relative;
    color: #333;
    font-size: 16px;
    font-weight: bold;
    span {
      display: inline-block;
    }
    .block {
      display: block;
    }
    .block-show {
      position: absolute;
      right: 10px;
      top: 0;
      bottom: 0;
      margin: auto;
      min-width: 20px;
      text-align: center;
      font-size: 16px;
    }
  }
  .block-show {
    display: inline-block;
    background-color: darkgoldenrod;
    padding: 0 10px;
    height: 25px;
    line-height: 25px;
    border-radius: 5px;
    color: white;
    margin: 5px;
  }
}
.block-show-box {
  margin-top: 5px;
}
.button-item {
  width: 200px;
  display: block;
  margin: 10px auto;
  height: 35px;
  line-height: 35px;
  text-align: center;
  border-radius: 5px;
  color: white;
  cursor: pointer;
  box-shadow: 1px 1px 4px #ccc;
}
.fix-button {
  background-color: darkkhaki;
  
}
.clear-button {
  background-color: teal;
}
.chengyu-base {
  background-color: transparent;
  border-bottom: 2px solid #7bb582;
}
.nrsh.XiYu {
  background-color: transparent;
  border-bottom: 2px solid #b5b539;
}
.top-title-bar {
  line-height: 45px;
  text-align: center;
  font-size: 18px;
  background-color: white;
  border-bottom: 1px solid #ddd;
  font-weight: bold;
}
.auto-fix-button {
  margin: 10px;
  color: black;
  padding: 10px;
  border-radius: 5px;
  box-shadow: 1px 3px 5px #d0c5c5;
  background-color: cornsilk;
  font-size: 16px;
  line-height: 24px;
  cursor: pointer;
}
</style>
